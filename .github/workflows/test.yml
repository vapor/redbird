name: test
on:
  pull_request: { types: [opened, reopened, synchronize, ready_for_review] }
  push: { branches: [ main ] }
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  LOG_LEVEL: info
  SWIFT_DETERMINISTIC_HASHING: 1
  REDIS_HOSTNAME: redis
  REDIS_PORT: 6379
  REDIS_HOSTNAME_2: redis-2
  REDIS_PORT_2: 6379

jobs:
  api-breakage:
    if: ${{ !(github.event.pull_request.draft || false) }}
    runs-on: ubuntu-latest
    container: swift:5.8-jammy
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with: { 'fetch-depth': 0 }
      - name: Run API breakage check action
        uses: vapor/ci/.github/actions/ci-swift-check-api-breakage@reusable-workflows

  linux-unit:
    if: ${{ !(github.event.pull_request.draft || false) }}
    strategy:
      fail-fast: false
      matrix:
        container:
          - swift:5.6-focal
          - swift:5.7-jammy
          - swift:5.8-jammy
          - swiftlang/swift:nightly-5.9-jammy
          - swiftlang/swift:nightly-main-jammy
        redis:
          - redis:6
          - redis:7
    container: ${{ matrix.container }}
    services:
      redis:
        image: ${{ matrix.redis }}
      redis-2:
        image: ${{ matrix.redis }}
    runs-on: ubuntu-latest
    steps:
      - name: Save Redis version to env
        run: |
          echo REDIS_VERSION='${{ matrix.redis }}' >> $GITHUB_ENV
      - name: Check out package
        uses: actions/checkout@v3
      - name: Run unit tests with Thread Sanitizer
        run: swift test --sanitize=thread --enable-code-coverage
      - name: Upload code coverage
        uses: vapor/swift-codecov-action@v0.2
        with:
          cc_env_vars: 'SWIFT_VERSION,SWIFT_PLATFORM,RUNNER_OS,RUNNER_ARCH,REDIS_VERSION'
